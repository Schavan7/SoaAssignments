
package ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "All_web_Services", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AllWebServices {


    /**
     * 
     * @return
     *     returns java.util.List<ws.Order>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrders", targetNamespace = "http://ws/", className = "ws.GetOrders")
    @ResponseWrapper(localName = "getOrdersResponse", targetNamespace = "http://ws/", className = "ws.GetOrdersResponse")
    @Action(input = "http://ws/All_web_Services/getOrdersRequest", output = "http://ws/All_web_Services/getOrdersResponse")
    public List<Order> getOrders();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns ws.Price
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getpricetofrom", targetNamespace = "http://ws/", className = "ws.Getpricetofrom")
    @ResponseWrapper(localName = "getpricetofromResponse", targetNamespace = "http://ws/", className = "ws.GetpricetofromResponse")
    @Action(input = "http://ws/All_web_Services/getpricetofromRequest", output = "http://ws/All_web_Services/getpricetofromResponse")
    public Price getpricetofrom(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Integer arg1);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Price>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getpriceAll", targetNamespace = "http://ws/", className = "ws.GetpriceAll")
    @ResponseWrapper(localName = "getpriceAllResponse", targetNamespace = "http://ws/", className = "ws.GetpriceAllResponse")
    @Action(input = "http://ws/All_web_Services/getpriceAllRequest", output = "http://ws/All_web_Services/getpriceAllResponse")
    public List<Price> getpriceAll();

    /**
     * 
     * @return
     *     returns java.util.List<ws.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomers", targetNamespace = "http://ws/", className = "ws.GetCustomers")
    @ResponseWrapper(localName = "getCustomersResponse", targetNamespace = "http://ws/", className = "ws.GetCustomersResponse")
    @Action(input = "http://ws/All_web_Services/getCustomersRequest", output = "http://ws/All_web_Services/getCustomersResponse")
    public List<Customer> getCustomers();

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.Truck
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTruck", targetNamespace = "http://ws/", className = "ws.GetTruck")
    @ResponseWrapper(localName = "getTruckResponse", targetNamespace = "http://ws/", className = "ws.GetTruckResponse")
    @Action(input = "http://ws/All_web_Services/getTruckRequest", output = "http://ws/All_web_Services/getTruckResponse")
    public Truck getTruck(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Employee>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmployee", targetNamespace = "http://ws/", className = "ws.GetEmployee")
    @ResponseWrapper(localName = "getEmployeeResponse", targetNamespace = "http://ws/", className = "ws.GetEmployeeResponse")
    @Action(input = "http://ws/All_web_Services/getEmployeeRequest", output = "http://ws/All_web_Services/getEmployeeResponse")
    public List<Employee> getEmployee();

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomer", targetNamespace = "http://ws/", className = "ws.GetCustomer")
    @ResponseWrapper(localName = "getCustomerResponse", targetNamespace = "http://ws/", className = "ws.GetCustomerResponse")
    @Action(input = "http://ws/All_web_Services/getCustomerRequest", output = "http://ws/All_web_Services/getCustomerResponse")
    public Customer getCustomer(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Truck>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTrucks", targetNamespace = "http://ws/", className = "ws.GetTrucks")
    @ResponseWrapper(localName = "getTrucksResponse", targetNamespace = "http://ws/", className = "ws.GetTrucksResponse")
    @Action(input = "http://ws/All_web_Services/getTrucksRequest", output = "http://ws/All_web_Services/getTrucksResponse")
    public List<Truck> getTrucks();

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.Order
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrder", targetNamespace = "http://ws/", className = "ws.GetOrder")
    @ResponseWrapper(localName = "getOrderResponse", targetNamespace = "http://ws/", className = "ws.GetOrderResponse")
    @Action(input = "http://ws/All_web_Services/getOrderRequest", output = "http://ws/All_web_Services/getOrderResponse")
    public Order getOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.Employee
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEmployeeByName", targetNamespace = "http://ws/", className = "ws.GetEmployeeByName")
    @ResponseWrapper(localName = "getEmployeeByNameResponse", targetNamespace = "http://ws/", className = "ws.GetEmployeeByNameResponse")
    @Action(input = "http://ws/All_web_Services/getEmployeeByNameRequest", output = "http://ws/All_web_Services/getEmployeeByNameResponse")
    public Employee getEmployeeByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
